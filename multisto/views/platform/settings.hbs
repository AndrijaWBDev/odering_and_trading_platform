{{> Header}}

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<style>
    .tag {
        font-size:50%;
        vertical-align: super;
        border-radius: 8px;
        padding: 4px;
        color: white;
        background-color: burlywood;
    }
</style>

<script language="javascript">
  var UploadFile_Size = 5;         //TODO   set according to server settings
  let metaValues;
  $(document).ready(function () {
    SummernoteBasicDataInitialize('txtDisclaimer', 'Enter Disclaimer Text', 160);
    SummernoteBasicDataInitialize('txtFooter', 'Enter Email Footer Text', 160);
    SummernoteBasicDataInitialize('txtregistrationtext', 'Enter Registration Page Text', 160);
    SummernoteBasicDataInitialize('txtsuccesstext', 'Enter KYC Profile Success Page Text', 160);
    SummernoteBasicDataInitialize('txttellafriend', 'Enter Tell a Friend Email Contents', 160);
    SummernoteBasicDataInitialize('txtinvestorbulkupload', 'Enter Investor Bulk Upload Email Contents', 160);

    SummernoteBasicDataInitialize('ef-Line1', 'Select Email', 160);
    SummernoteBasicDataInitialize('ef-Line2', 'Select Email', 160);
    SummernoteBasicDataInitialize('ef-Line3', 'Select Email', 160);
    SummernoteBasicDataInitialize('ef-text', 'Select Email', 160);

    $(`#emailTitle`).select2();

    loadStoMetadataFields();
    const stoSettings = JSON.parse('{{{record.settings}}}');
    if (stoSettings.isInternalExchangeEnabled === 1) {
      document.getElementById('isInternalExchangeEnabledToggle').setAttribute('checked', 'true');
    } else {
      document.getElementById('isInternalExchangeEnabledToggle').removeAttribute('checked');
    }
    const stoSettingsJsonArea = document.getElementById('txtStoSettingsJson');
    stoSettingsJsonArea.value = jsonBeautifier(`{{{record.settings}}}`);
    updateTextareaSize(stoSettingsJsonArea);
    const stoStepsJsonArea = document.getElementById('txtStoKycSteps');
    stoStepsJsonArea.value = jsonBeautifier(`{{{record.steps}}}`);
    updateTextareaSize(stoStepsJsonArea);
  });

  function loadStoMetadataFields() {
    metaValues = JSON.parse(decodeURIComponent(`{{{stoMetadataString}}}`));
    metaValues.forEach((meta) => {
      if (meta.type === 'richtext') {
        SummernoteBasicDataInitialize(`txtHost-${meta.key}`, '');
      }
    });
  }

  function updateDisclaimer() {
    if (document.getElementById('txtDisclaimer').value == '') {
      showModelGeneralOKDialogBox('Please enter some disclaimer text');
      return;
    } else
      document.getElementById('frmDisclaimer').submit();
  }

  function updateInvestmentReturn() {
    document.getElementById('investmentReturn').submit();
  }

  function updateEamilFooter() {
    if (document.getElementById('txtFooter').value == '') {
      showModelGeneralOKDialogBox('Please enter some text');
      return;
    } else
      document.getElementById('frmFooter').submit();
  }

  function updatetxtregistrationtext() {
    if (document.getElementById('txtregistrationtext').value == '') {
      showModelGeneralOKDialogBox('Please enter some text');
      return;
    } else
      document.getElementById('frmregistrationtext').submit();
  }

  function updateSMTPSettings() {
    document.getElementById('frmSMTPSettings').submit();
  }

  function updateMetadata() {
    const form = document.getElementById('metadataForm');
    const data = Object.fromEntries(new FormData(form).entries());
    metaValues.forEach(meta => {
      if (meta.type === 'chart') {
        // exclude hidden input for this meta key
        const keys = Object.keys(data).filter(k => k.includes(meta.key) && k !== meta.key);
        const chartData = {};
        keys.forEach(key => {
          const input = $(`[name="${key}" ]`);
          const isNumber = input.attr('type') === 'number';
          // main keys of object
          if (key.includes('.') && !key.includes('[')) {
            const dataKey = key.replace(`${meta.key}.`, '');
            chartData[dataKey] = isNumber ? Number(data[key]) : data[key];
          }
          // array keys
          if (key.includes('[')) {
            const dataKey = key.replace(`${meta.key}.`, '');
            const [ fieldName ] = dataKey.split('[');
            const [ , arrayField ] = dataKey.split('].');

            const matches = dataKey.match(/\[(.*?)\]/);
            const index = Number(matches[1]);

            if (!chartData[fieldName]) {
              chartData[fieldName] = [];
            }
            if (!chartData[fieldName][index]) {
              chartData[fieldName][index] = {};
            }
            chartData[fieldName][index][arrayField] = isNumber ? Number(data[key]) : data[key];
          }
        });
        $(`[name="${meta.key}"]`).val(JSON.stringify(chartData));
      }
    });

    document.getElementById('metadataForm').submit();
  }

  function submitUploadFile(id) {
    var fileInput = document.getElementById('file' + id);
    var filePath = fileInput.value;

    if (filePath == null || filePath == '') {
      showModelGeneralOKDialogBox('Please select image to upload');
      return;
    }

    document.getElementById('frmimageupload' + id).submit();
  }

  function fileValidation(id) {
    var fileInput = document.getElementById('file' + id);

    var filePath = fileInput.value;

    var error = false;

    var allowedExtensions = /(\.tif|\.tiff|\.jpg|\.jpeg|\.png|\.gif)$/i;
    if (fileInput.files[0].size > UploadFile_Size * 1048576) {
      showModelGeneralOKDialogBox('File size cannot be larger than ' + UploadFile_Size + 'MB');
      error = true;
    } else if (!allowedExtensions.exec(filePath)) {
      showModelGeneralOKDialogBox('Please select image file only');
      error = true;
    }

    if (error == true) {
      fileInput.value = '';
      $('#upload-file' + id).html('No File Selected');
      return false;
    } else
      $('#upload-file' + id).html(fileInput.files[0].name);
  }

  function updatesuccessfultext() {
    document.getElementById('frmsuccessfultext').submit();
  }

  function updatetellafriend() {
    if (document.getElementById('txttellafriend').value == '') {
      showModelGeneralOKDialogBox('Please enter some text');
      return;
    } else
      document.getElementById('frmtxttellafriend').submit();
  }

  function updateinvestorbulkupload() {
    if (document.getElementById('txtinvestorbulkupload').value == '') {
      showModelGeneralOKDialogBox('Please enter some text');
      return;
    } else
      document.getElementById('frmtxtinvestorbulkupload').submit();
  }

  function updateExchnageDate() {
    const toggleCheck = document.getElementById('isInternalExchangeEnabledToggle').checked;
    if ((toggleCheck === true ? 1 : 0) !== {{exchangeModuleEnabled}}) {
      window.location.href = `changeIsInternalExchangeEnabled?id={{record.ID}}&isInternalExchangeEnabled=${toggleCheck === true ? 1 : 0}`;
    } else {
      window.location.href = 'changeExchangeOpenDate?id={{record.ID}}&date=' + commonGetMySQLDateFormat(document.getElementById('dateExchangeOpen').value);
    }
    return false;
  }

  function updateStoKycSteps() {
    const url = '/platform/updateStoKycSteps';
    const json = {
      stoId: '{{{record.ID}}}',
      txtStoKycSteps: document.getElementById('txtStoKycSteps').value,
    };
    saveToDatabase(url, json, 'updateStoKycStepsErrorMessage');
  }

  function updateStoSettingsJson() {
    const url = '/platform/updateStoSettingsJson';
    const json = {
      stoId: '{{{record.ID}}}',
      txtStoSettings: document.getElementById('txtStoSettingsJson').value,
    };
    saveToDatabase(url, json, 'updateStoSettingsJsonErrorMessage');
  }

  function saveToDatabase(url, json, errorLabelId) {
    const xhr = new XMLHttpRequest();
    xhr.open('POST', url);
    xhr.setRequestHeader('X-CSRF-Token', "{{csrfToken}}");
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

    xhr.onreadystatechange = function () {//Call a function when the state changes.
      if (xhr.readyState == 4) {
        if (xhr.status == 200) {
          location.reload();
        } else {
          document.getElementById(errorLabelId).innerText = xhr.response;
        }
      }
    };
    xhr.send(JSON.stringify(json));
  }

  function jsonBeautifier(rawString) {
    if (rawString !== '') {
      try {
        const jsonObject = JSON.parse(rawString);
        return JSON.stringify(jsonObject, null, '\t');
      } catch (e) {

      }
    }
    return rawString;
  }

  function updateTextareaSize(textarea) {
    const scrollLeft = window.pageXOffset ||
      (document.documentElement || document.body.parentNode || document.body).scrollLeft;

    const scrollTop = window.pageYOffset ||
      (document.documentElement || document.body.parentNode || document.body).scrollTop;

    textarea.style.overflow = 'hidden';
    textarea.style.height = 0;
    textarea.style.height = textarea.scrollHeight + 'px';

    textarea.style.height = 'auto';
    textarea.style.height = textarea.scrollHeight + 'px';

    window.scrollTo(scrollLeft, scrollTop);
  }

const emailTextsData = {{{emailTextsDataDebug}}};

function selectEmailTitle() {
  $(`#row-ef-Subject`).hide();
  $(`#row-ef-subject`).hide();
  $(`#row-ef-Line1`).hide();
  $(`#row-ef-Line2`).hide();
  $(`#row-ef-Line3`).hide();
  $(`#row-ef-text`).hide();
  $(`#ef-Subject`).val('');
  $(`#ef-Subject`).attr('placeholder','');
  $(`#ef-subject`).val('');
  $(`#ef-subject`).attr('placeholder','');
  $(`#ef-Line1`).val('');
  $(`#ef-Line2`).val('');
  $(`#ef-Line3`).val('');
  $(`#ef-text`).val('');
  $(`#ef-Line1`).next().find(`.note-editable`).html('');
  $(`#ef-Line2`).next().find(`.note-editable`).html('');
  $(`#ef-Line3`).next().find(`.note-editable`).html('');
  $(`#ef-text`).next().find(`.note-editable`).html('');

  const title = $(`#emailTitle`).val();
  const email = emailTextsData.emails[title];
  const fields = Object.keys(email);
  fields.forEach((field) => {
    $(`#row-ef-${field}`).show();
    const str = `${email[field]}`;
    if (field.toLowerCase() !== "subject") {
      $(`#ef-${field}`).next().find(`.note-placeholder`).html(str);
      $(`#ef-${field}`).next().find(`.note-editable`).html(str);
      $(`#ef-${field}`).next().find(`.note-placeholder`).html('');
    } else {
      $(`#ef-${field}`).attr(`placeholder`, str);
    }
  });
}
function updateEmailTexts() {
  $(`#frmEmailTexts`).submit();
}
</script>

{{> HeaderInnerPlatform}}

{{#if message}}
  <b><span id="ErrorMessages" style="color:red"> {{message}} </span></b>
  <br /><br />
{{/if}}

<div class="row">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">{{record.title}} Settings </h4>
      </div>
      <div class="content">

        <div class="row topPaddingBetweenPageSections">
          <div class="col-md-8">
            <div class="row">
              <div class="col-md-3"><label>Domain</label></div>
              <div class="col-md-9"> {{record.stolink}} </div>
            </div>
            <div class="row">
              <div class="col-md-3"><label>Investor Login</label></div>
              <div class="col-md-9"> {{record.stolinkfull}}/login</div>
            </div>
            <div class="row">
              <div class="col-md-3"><label>Admin Login</label></div>
              <div class="col-md-9"> {{record.stolinkfull}}/admin/login</div>
            </div>
            <div class="row">
              <div class="col-md-3"><label>Company</label></div>
              <div class="col-md-9"> {{companyType}} </div>
            </div>

          </div>
          <div class="col-md-4">
            <form id="frmimageupload1" name="frmimageupload1" action="/platform/changelogosite?_csrf={{csrfToken}}"
            enctype="multipart/form-data" method="post">
            <b><span style="font-size:16px;">Change Project Logo</span> <br /><br /></b>
            <img src="/img/stologo/{{record.logo}}" style="max-width:150px;" />
            <div class="row">
              <div class="col-md-12">
                <div class="upload-btn-wrapper">
                  <button class="btnfile btn-sm">Select File to Upload</button>
                  <input id="file1" name="file1" type="file" onchange="return fileValidation('1')">
                  &nbsp;&nbsp;&nbsp;&nbsp;
                  <span style="color: green; font-size: 18px; " id="upload-file1">No File Selected</span>
                </div>
              </div>
            </div>

            <br />
            <input type="hidden" name="stoid" value="{{record.ID}}" />
            <button type="button" onclick="submitUploadFile('1')" class="btn btn-info btn-fill">Update Site Logo
            </button>

            </form>
          </div>
        </div>
        <br />
      </div>
    </div>
  </div>
</div>

{{#if isInvestmentReturnCalculationEnabled}}
    <div class="row topPaddingBetweenPageSections">
        <div class="col-md-12">
            <div class="card">
                <div class="header">
                    <h4 class="title">Investment Return</h4>
                    <label>Calculated as a % of the Invested Amount each year</label>
                </div>
                <div class="content">

                    <form id="investmentReturn" name="investmentReturn" action="/platform/updateInvestmentReturn" method="post">
                        <input type="number" name="investmentReturn" value="{{record.investmentReturn}}" /> %
                        <input type="hidden" name="stoId" value="{{record.ID}}" />
                        <input type="hidden" name="_csrf" value="{{csrfToken}}" />
                        <button type="button" onclick="updateInvestmentReturn()" class="btn btn-info btn-fill">Update Investment Return
                        </button>
                    </form>
                    <br />
                </div>
            </div>
        </div>
    </div>
{{/if}}

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">Disclaimer Text</h4>
        <label>Text is displayed at the bottom of each page</label>
      </div>
      <div class="content">

        <form id="frmDisclaimer" name="frmDisclaimer" action="/platform/updateDisclaimer" method="post">
          <textarea id="txtDisclaimer" name="txtDisclaimer" maxlength="3500" rows="5" class="form-control border-input"
                    style="width:100%;">{{record.disclamer}}</textarea>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <button type="button" onclick="updateDisclaimer()" class="btn btn-info btn-fill">Update Site Disclaimer
          </button>
        </form>
        <br />
      </div>
    </div>
  </div>
</div>

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">Email Footer Text</h4>
        <label>Text inserted as footer under each email</label>
      </div>
      <div class="content">

        <form id="frmFooter" name="frmFooter" action="/platform/updateEmailFooter" method="post">
          <textarea id="txtFooter" name="txtFooter" maxlength="3500" rows="5" class="form-control border-input"
                    style="width:100%;">{{record.emailFooter}}</textarea>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <button type="button" onclick="updateEamilFooter()" class="btn btn-info btn-fill">Update Email Footer Text
          </button>
        </form>
        <br />
      </div>
    </div>
  </div>
</div>

<div class="row topPaddingBetweenPageSections" style="z-index:700;position: relative;">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">Registration Page Banner</h4>
        <label>This will be displayed as banner on top of the investor registration page</label>
      </div>
      <div class="content">

        <form id="frmimageupload2" name="frmimageupload2" action="/platform/changebannersite?_csrf={{csrfToken}}"
        enctype="multipart/form-data" method="post">

        <img src="/img/stobanners/{{record.logo}}" style="max-width:600px;" />

        <div class="row">
          <div class="col-md-5">
            <div class="upload-btn-wrapper">
              <button class="btnfile btn-sm">Select File to Upload</button>
              <input id="file2" name="file2" type="file" onchange="return fileValidation('2')">
              &nbsp;&nbsp;&nbsp;&nbsp;
              <span style="color: green; font-size: 18px; " id="upload-file2">No File Selected</span>
            </div>
          </div>
        </div>

        <br />
        <input type="hidden" name="stoid" value="{{record.ID}}" />
        <button type="button" onclick="submitUploadFile('2')" class="btn btn-info btn-fill">Update Registration Page
          Banner
        </button>

        </form>

        <br />
      </div>
    </div>
  </div>
</div>

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <div class="col-md-2">
          <label class="switch">
            <input id="isInternalExchangeEnabledToggle" type="checkbox">
            <span class="slider round"></span>
          </label>
        </div>
        <div class="col-md-4">
          <h4 class="title">Exchange Date Open</h4>
          <label>When Exchnage will be open for operations</label>
        </div>
      </div>
      <div class="content">

        {{#if exchangeIsClose}}
          <img src="/img/reddot.png" width="20px"> &nbsp;&nbsp;&nbsp;
          <label>Exchange is Closed. Change the date and select some previous date to open exchange OR set date when
            exchange will be opne </label>
        {{else}}
          <img src="/img/greendot.png" width="20px"> &nbsp;&nbsp;&nbsp; Exchange is Open
        {{/if}}

        <br /><br />

        <div class="row">
          {{#if exchangeModuleEnabled}}
            <div class="col-md-3">
              <input type="text" maxLength="120" id="dateExchangeOpen" name="dateExchangeOpen"
                     class="form-control border-input datepicker-here" data-language='en'
                     value="{{record.exchangeOpenDateFormat}}" data-date-format="MM dd yyyy" type=text
                     autocomplete="off" placeholder="Enter Date of Birth" value="" onkeydown="return false;">
            </div>
          {{/if}}
          <div class="col-md-3">
            <button type="button" onclick="updateExchnageDate()" class="btn btn-info btn-fill">Update</button>
          </div>
        </div>

        <br />
      </div>
    </div>
  </div>
</div>

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">Registration Page Text</h4>
        <label>Following text will be displayed on upper portion of investor registration page. Text include information
          about company images or video links can be inserted. This text will be displayed under Registration Page
          Banner</label>
      </div>
      <div class="content">

        <form id="frmregistrationtext" name="frmregistrationtext" action="/platform/updateRegistrationText"
              method="post">
          <textarea id="txtregistrationtext" name="txtregistrationtext" maxlength="3500" rows="5"
                    class="form-control border-input" style="width:100%;">{{record.registrationtext}}</textarea>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <button type="button" onclick="updatetxtregistrationtext()" class="btn btn-info btn-fill">Update Text</button>
        </form>
        <br />
      </div>
    </div>
  </div>
</div>

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">Investor KYC Profile Send Success Text</h4>
        <label>When investor submit his KYC profile to admin for considerations then this text will be shown on final
          page as success message</label>
      </div>
      <div class="content">

        <form id="frmsuccessfultext" name="frmsuccessfultext" action="/platform/changeregistrationsuccesstext"
              method="post">
          <textarea id="txtsuccesstext" name="txtsuccesstext" maxlength="3500" rows="5"
                    class="form-control border-input" style="width:100%;">{{record.registrationsuccesstext}}</textarea>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <button type="button" onclick="updatesuccessfultext()" class="btn btn-info btn-fill">Update Text</button>
        </form>
        <br />
      </div>
    </div>
  </div>
</div>

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">Tell a Friend Email Text</h4>
        <label>Text in Tell a Friend Email</label>
      </div>
      <div class="content">

        <form id="frmtxttellafriend" name="frmtxttellafriend" action="/platform/changetellafriend" method="post">
          <textarea id="txttellafriend" name="txttellafriend" maxlength="3500" rows="5"
                    class="form-control border-input" style="width:100%;">{{record.tellafriendtext}}</textarea>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <button type="button" onclick="updatetellafriend()" class="btn btn-info btn-fill">Update Text</button>
        </form>
        <br />
      </div>
    </div>
  </div>
</div>

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">Investor Bulk Upload Email Text</h4>
        <label>Text in the email that new investors registered via the bulk upload feature will see</label>
      </div>
      <div class="content">

        <form id="frmtxtinvestorbulkupload" name="frmtxtinvestorbulkupload"
              action="/platform/changeemailinvestorbulkupload" method="post">
          <textarea id="txtinvestorbulkupload" name="txtinvestorbulkupload" maxlength="3500" rows="5"
                    class="form-control border-input"
                    style="width:100%;">{{record.EmailTxtInvestorBulkUpload}}</textarea>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <label>note: the email will always start with "Dear {customerName}" and end with a link for their password set
            up</label>
          <br />
          <button type="button" onclick="updateinvestorbulkupload()" class="btn btn-info btn-fill">Update Text</button>
        </form>
        <br />
      </div>
    </div>
  </div>
</div>

{{!-- CUSTOM EMAILS --}}

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <script>
          function debugEmails() {
            const data = JSON.parse(`{{{emailTextsDataDebug}}}`);
            console.log(data);
          }
        </script>
        <h4 class="title">Other Email Texts <small class="tag" onclick="debugEmails()">BETA</small></h4>
        <label>This feature will allow you to change all emails in the system and save the change globally or per STO.</label>
        <label>Fields will change if you type in them. Keep them empty to not make changes.</label>
        <label><b>Remember to click "Update Text" to save each email or you might lose progress.</b></label>
      </div>
      <div class="content">

        <form id="frmEmailTexts" name="frmEmailTexts"
              action="/platform/emailtexts" method="post">
          <select id="emailTitle" name="emailTitle" class="form-control border-input" onchange="selectEmailTitle()">
            <option id="SelectAnEmail" value="" disabled hidden selected>Select an email</option>
            {{#each emailTextsData.titleSubjects}}
              <option value="{{this.title}}">"{{{this.subject}}}" [#{{this.title}}]</option>
            {{/each}}
          </select>
          <div id="emailFields">
            <div class="row" id="row-ef-Subject" style="display: none;">
              <div class="col-md-1">Subject</div>
              <div class="col-md-11">
                <input id="ef-Subject" name="Subject" maxlength="3500" rows="1"
                          type="text"
                          class="form-control border-input"
                          style="width:100%;"></input>
              </div>
            </div>
            <div class="row" id="row-ef-subject" style="display: none;">
              <div class="col-md-1">Subject</div>
              <div class="col-md-11">
                <input id="ef-subject" name="subject" maxlength="3500" rows="1"
                          type="text"
                          class="form-control border-input"
                          style="width:100%;"></input>
              </div>
            </div>
            <div class="row" id="row-ef-Line1" style="display: none;">
              <div class="col-md-1">Line 1</div>
              <div class="col-md-11">
                <textarea id="ef-Line1" name="Line1" maxlength="3500" rows="5"
                          class="form-control border-input"
                          style="width:100%;"></textarea>
              </div>
            </div>
            <div class="row" id="row-ef-Line2" style="display: none;">
              <div class="col-md-1">Line 2</div>
              <div class="col-md-11">
                <textarea id="ef-Line2" name="Line2" maxlength="3500" rows="5"
                          class="form-control border-input"
                          style="width:100%;"></textarea>
              </div>
            </div>
            <div class="row" id="row-ef-Line3" style="display: none;">
              <div class="col-md-1">Line 3</div>
              <div class="col-md-11">
                <textarea id="ef-Line3" name="Line3" maxlength="3500" rows="5"
                          class="form-control border-input"
                          style="width:100%;"></textarea>
              </div>
            </div>
            <div class="row" id="row-ef-text" style="display: none;">
              <div class="col-md-1">Lines (max 2)</div>
              <div class="col-md-11">
                <textarea id="ef-text" name="text" maxlength="3500" rows="2"
                          class="form-control border-input"
                          style="width:100%;"></textarea>
              </div>
            </div>
          </div>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <br/>
          <label>
            note: This feature is experimental and we are still adding to it.<br/>
          </label>
          <br />
          <div id="submitEmailTexts" class="collapsed">
            <button type="button" onclick="updateEmailTexts()" class="btn btn-info btn-fill">Update Text</button>
            <input id="isGlobal" style="margin-left: 1em;" name="isGlobal" type="checkbox" checked="true">
            <label for="isGlobal">Apply as default for all STOs</label>
          </div>
        </form>
        <br />
      </div>
    </div>
  </div>
</div>

{{!-- /CUSTOM EMAILS --}}

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">SMTP Settings</h4>
        <label>Email server settings. All emails from this company will be routed through this email server. Please make
          sure that email settings are correct as it may result in errors on platform</label>
      </div>
      <div class="content">
        <form id="frmSMTPSettings" name="frmSMTPSettings" action="/platform/updatesmtpinfosto" method="post">

          <div class="row">
            <div class="col-md-3">
              Host
            </div>
            <div class="col-md-4">
              <input type="text" maxlength="200" class="form-control border-input" id="txtHost" name="txtHost"
                     placeholder="Enter Host Name" value="{{record.SMTP_Host}}">
            </div>
          </div>
          <div class="row">
            <div class="col-md-3">
              Port
            </div>
            <div class="col-md-4">
              <input type="text" maxlength="20" class="form-control border-input" id="txtPort" name="txtPort"
                     placeholder="Enter Port" value="{{record.SMTP_Port}}">
            </div>
          </div>
          <div class="row">
            <div class="col-md-3">
              User Name
            </div>
            <div class="col-md-4">
              <input type="text" maxlength="200" class="form-control border-input" id="txtUser" name="txtUser"
                     placeholder="Enter User Name" value="{{record.SMTP_User}}">
            </div>
          </div>
          <div class="row">
            <div class="col-md-3">
              Password
            </div>
            <div class="col-md-4">
              <input type="text" maxlength="150" class="form-control border-input" id="txtPassword" name="txtPassword"
                     placeholder="Enter Password" value="{{password}}">
            </div>
          </div>
          <div class="row">
            <div class="col-md-3">
              From Email Address
            </div>
            <div class="col-md-4">
              <input type="text" maxlength="70" class="form-control border-input" id="txtFromEmail" name="txtFromEmail"
                     placeholder="EnterFromEmailAddress" value="{{record.SMTP_FromAddress}}">
            </div>
          </div>

          <div class="row">
            <div class="col-md-3">
              From Name
            </div>
            <div class="col-md-4">
              <input type="text" maxlength="100" class="form-control border-input" id="txtFromName" name="txtFromName"
                placeholder="Enter Name" value="{{record.SMTP_FromName}}">
            </div>
          </div>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <button type="button" onclick="updateSMTPSettings()" class="btn btn-info btn-fill">Save Settings</button>

        </form>
        <br />
      </div>
    </div>
  </div>
</div>

{{> accreditationSettings}}

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">STO Settings</h4>
        <label>Other STO settings represented as a JSON object</label>
      </div>
      <div class="content">
        <textarea id="txtStoSettingsJson" name="txtStoSettingsJson" maxlength="3500" class="form-control border-input"
                  style="width:100%;"></textarea>
        <br />
        <b>
          <ul><span style="color:red;" id="updateStoSettingsJsonErrorMessage"></span></ul>
        </b>
        <button type="button" onclick="updateStoSettingsJson()" class="btn btn-info btn-fill">Update Text</button>
        <br />
      </div>
    </div>
  </div>
</div>

<div class="row topPaddingBetweenPageSections">
  <div class="col-md-12">
    <div class="card">
      <div class="header">
        <h4 class="title">STO KYC Steps</h4>
        <label>STO KYC Steps represented as a JSON object</label>
      </div>
      <div class="content">

        <form id="frmStoKycSteps" name="frmStoKycSteps" action="/platform/updateStoKycSteps" method="post">
          <textarea id="txtStoKycSteps" name="txtStoKycSteps" maxlength="3500" class="form-control border-input"
                    style="width:100%;"></textarea>

          <input type="hidden" name="stoid" value="{{record.ID}}" />
          <input type="hidden" name="_csrf" value="{{csrfToken}}" />
          <br />
          <b>
            <ul><span style="color:red;" id="updateStoKycStepsErrorMessage"></span></ul>
          </b>
          <button type="button" onclick="updateStoKycSteps()" class="btn btn-info btn-fill">Update Text</button>
        </form>
        <br />
      </div>
    </div>
  </div>
</div>

{{#if stoMetadata}}
  <div class="row topPaddingBetweenPageSections">
    <div class="col-md-12">
      <div class="card">
        <div class="header">
          <h4 class="title">Other</h4>
        </div>
        <div class="content">
          <form id="metadataForm" name="metadataForm" action="/platform/stoMetadata" method="post">

            {{#each stoMetadata}}
              {{#ifEqual this.type "checkbox"}}
                <div class="row">
                  <div class="col-md-12">
                    <label>
                      {{this.key}}
                    </label>
                    <input type="checkbox" id="txtHost-{{this.key}}"
                           name="{{this.key}}" {{#if this.value}}checked{{/if}} value="true">
                  </div>
                </div>
              {{else}}
                <div class="row">
                  <div class="col-md-12">
                    <label>
                      {{this.key}}
                    </label>
                  </div>
                  <br />
                  {{#ifEqual this.type "tabs"}}
                    <div class="col-md-12">
                      <p class="help-block">To fill this block use tab's content keys</p>
                    </div>
                  {{else}}
                    {{#ifEqual this.type "richtext"}}
                      <div class="col-md-12">
                        <textarea id="txtHost-{{this.key}}" name="{{this.key}}" maxlength="3500" rows="5"
                                  class="form-control border-input"
                                  style="width:100%;">{{this.value}}</textarea>
                      </div>
                    {{else}}
                      {{#ifEqual this.type "chart"}}
                        <div class="col-md-12">
                          <div class="col-md-3">
                            <label>Chart title</label>
                            <input type="text" class="form-control border-input" id="txtHost-{{this.key}}-title"
                                   name="{{this.key}}.title" value="{{this.value.title}}">
                            <label>Chart height</label>
                            <input type="number" class="form-control border-input" id="txtHost-{{this.key}}-height"
                                   name="{{this.key}}.height" value="{{this.value.height}}">
                          </div>
                          {{#each this.value.data}}
                            <div class="col-md-3">
                              <label>Title</label>
                              <input type="text" class="form-control border-input"
                                     id="txtHost-{{../key}}-{{@index}}-title"
                                     name="{{../key}}.data[{{@index}}].title" value="{{this.title}}">
                              <label>Value</label>
                              <input type="number" class="form-control border-input"
                                     id="txtHost-{{../key}}-{{@index}}-value"
                                     name="{{../key}}.data[{{@index}}].value" value="{{this.value}}">
                              <label>color</label>
                              <input type="text" class="form-control border-input"
                                     id="txtHost-{{../key}}-{{@index}}-color"
                                     name="{{../key}}.data[{{@index}}].color" value="{{this.color}}">
                            </div>
                          {{/each}}
                          <input type="hidden" name="{{this.key}}">
                        </div>
                      {{else}}
                        <div class="col-md-12">
                          <input type="text" class="form-control border-input" id="txtHost-{{this.key}}"
                                 name="{{this.key}}" placeholder="" value="{{this.value}}">
                        </div>
                      {{/ifEqual}}
                    {{/ifEqual}}
                  {{/ifEqual}}
                </div>
              {{/ifEqual}}
            {{/each}}

            <input type="hidden" name="stoid" value="{{record.ID}}" />
            <input type="hidden" name="_csrf" value="{{csrfToken}}" />
            <button type="button" onclick="updateMetadata()" class="btn btn-info btn-fill">Save Settings</button>

          </form>
          <br />
        </div>
      </div>
    </div>
  </div>
{{/if}}

{{> Footer}}

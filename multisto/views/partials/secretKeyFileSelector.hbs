<script>
  var fileContents = "";

  function readPublicKeyBlob() {
        var files = document.getElementById('files').files;
        if (!files.length) {
          showModelGeneralOKDialogBox('Please select a file!');
          return;
        }

        var file = files[0];
        var start =  0;
        var stop =  file.size - 1;

        var reader = new FileReader();

        // If we use onloadend, we need to check the readyState.
        reader.onloadend = function(evt) {
          if (evt.target.readyState == FileReader.DONE) { // DONE == 2
              fileContents = evt.target.result;
          }
        };

        var blob = file.slice(start, stop + 1);
        reader.readAsBinaryString(blob);
  }
  function publicKeyFileSelected() {
		var filePath = document.getElementById('files').value;		
		var error = false;
		
        //var allowedExtensions = /(\.tif|\.tiff|\.jpg|\.jpeg|\.png|\.gif|\.doc|\.docx|\.pdf)$/i;
		var allowedExtensions = /(\.json|\.txt)$/i;
		/*if( fileInput.files[0].size > UploadFile_Size * 1048576 ) {
			showModelGeneralOKDialogBox("File size cannot be larger than " + UploadFile_Size + "MB");
			error = true;
		}*/
		if(!allowedExtensions.exec(filePath)) {
			showModelGeneralOKDialogBox('Please select json, txt files only');
			error = true;
		}
		
		if(error == true) 
            initializePublicKeyFileObject();
		else {
			$('#upload-file').html(document.getElementById('files').files[0].name);
            readPublicKeyBlob();
        }
  }
  function initializePublicKeyFileObject() {
        document.getElementById('files').value = '';
        document.getElementById('publicKeyPassword').value = '';
        fileContents = "";
        $('#upload-file').html("No File Selected");
        return false;			      
  }
  function publickKeySelectedOK() {
      if(document.getElementById('files').value == "" || fileContents == "") {
          showModelGeneralOKDialogBox("File not selected");
          return true;
      }

      if(document.getElementById('publicKeyPassword').value == "") {
          showModelGeneralOKDialogBox("Password is not entered");
          return true;
      }
      
      callbackPublicKeyFileAndPasswordCollected(fileContents.trim(), document.getElementById('publicKeyPassword').value.trim());

      return false;
  }
</script>

<div class = "modal fade" id="modelPrivateKeySelector" tabindex = "-1" role = "dialog" aria-labelledby = "modelPrivateKeySelector" aria-hidden = "true">

    <div class = "modal-dialog">
      <div class = "modal-content">

        <div class = "modal-header">
            <button type = "button" class = "close" data-dismiss = "modal" aria-hidden = "true">Ã—</button>
            <h4 class = "modal-title" id = "myModalLabel">Select Ethereum Key Store file</h4>
         </div>

        <div style="padding:30px;">
            <div class="row">
                <div class="col-md-11">
                    <label>Select Ethereum Key Store file that contains encrypted password</label> <br />
                    <div class="upload-btn-wrapper">
                        <button class="btnfile">Select File</button>
                        <input   id="files"   name="files"   type="file"  onchange="return publicKeyFileSelected()">
                        &nbsp;&nbsp;&nbsp;&nbsp;
                        <span style="color: green; font-size: 18px; " id="upload-file">No File Selected</span>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">

                <div class="col-md-6"> 
                    <label>Enter Password</label>
                    <input type="password" id="publicKeyPassword" name="publicKeyPassword" class="form-control border-input"/>
                </div>
            </div>
        </div>

        <div class = "modal-footer">
            <button type = "button" class = "btn btn-info btn-fill" data-dismiss = "modal" onclick="return publickKeySelectedOK()"> &nbsp; OK &nbsp; </button>
            <button type = "button" class = "btn btn-info btn-fill" data-dismiss = "modal"> &nbsp; Cancel &nbsp; </button>                 
        </div>

      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    
</div>
